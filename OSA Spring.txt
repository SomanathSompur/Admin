*************** ADDRESS MS End Points  ***************  

1. GET : OSA/api/addresses
-- Retrieve all addresses for the user.

2. GET : OSA/api/addresses/{addressId}
-- Retrieve details of a specific address.

3. GET : OSA/api/addresses/{userID}:
-- Retrieve a list of addresses associated with a specific user.

4. POST : OSA/api/addresses
-- Create a new address for the user.

5. PUT : OSA/api/addresses/{addressId}
-- Update details of a specific address.

6. DELETE : OSA/api/addresses/{addressId}
-- Delete a specific address.

7. GET : OSA/api/users/{userId}/addresses
-- Retrieve all addresses for a specific user.

8. GET : OSA/api/users/{userId}/addresses/default
-- Retrieve the default address for a specific user.

9. PUT : OSA/api/users/{userId}/addresses/default/{addressId}
-- Set a specific address as the default for a user.

10. GET : OSA/api/addresses/{country}/states
-- Retrieve a list of states/provinces within a specific country.

11. GET : OSA/api/addresses/{country}/cities
-- Retrieve a list of cities within a specific country.

*****************************************************************

1. GET : OSA/api/addresses
-- Retrieve all addresses for the user.

Exa : 
Response Body:
  {
    "addressId": "string",
    "userId": "string",
    "street": "string",
    "city": "string",
    "state": "string",
    "postalCode": "string",
    "country": "string",
    "isDefault": "boolean"
  },
  // Additional address objects for the user
]

*****************************************************************

2. GET : OSA/api/addresses/{addressId}
-- Retrieve details of a specific address.

Exa :
Response Body:
{
  "addressID": "123",
  "userID": "456",
  "street": "123 Main St",
  "city": "Cityville",
  "state": "ST",
  "zipCode": "12345",
  "country": "Countryland",
  "isDefault": true
}

*****************************************************************

3. POST : OSA/api/addresses
-- Create a new address for the user.

Exa :
Request Body:
{
  "userId": "string",
  "street": "string",
  "city": "string",
  "state": "string",
  "postalCode": "string",
  "country": "string",
  "isDefault": "boolean"
}

Response Body:
{
  "addressId": "string",
  "userId": "string",
  "street": "string",
  "city": "string",
  "state": "string",
  "postalCode": "string",
  "country": "string",
  "isDefault": "boolean"
}

*****************************************************************

4. PUT : OSA/api/addresses/{addressId}
-- Update details of a specific address.

Exa :
Request Body:
{
  "street": "string",
  "city": "string",
  "state": "string",
  "postalCode": "string",
  "country": "string",
  "isDefault": "boolean"
}

*****************************************************************

5. GET : OSA/api/addresses/{userID}:
-- Retrieve a list of addresses associated with a specific user.

Exa :
[
  {
    "addressID": "124",
    "userID": "456",
    "street": "456 Oak St",
    "city": "Townsville",
    "state": "ST",
    "zipCode": "54321",
    "country": "Countryland",
    "isDefault": false
  },
  {
    "addressID": "125",
    "userID": "456",
    "street": "789 Pine St",
    "city": "Villageton",
    "state": "ST",
    "zipCode": "98765",
    "country": "Countryland",
    "isDefault": true
  },
  // Additional addresses...
]

*****************************************************************

6. PUT : OSA/api/addresses/{addressId}
-- Update details of a specific address.

Exa :
Request Body:
{
  "street": "string",
  "city": "string",
  "state": "string",
  "postalCode": "string",
  "country": "string",
  "isDefault": "boolean"
}

*****************************************************************

7. GET : OSA/api/addresses/{userID}:
-- Retrieve a list of addresses associated with a specific user.

Exa :
{
  "userID": "456",
  "addresses": [
    {
      "addressID": "124",
      "street": "456 Oak St",
      "city": "Townsville",
      "state": "ST",
      "zipCode": "54321",
      "country": "Countryland",
      "isDefault": false
    },
    {
      "addressID": "125",
      "street": "789 Pine St",
      "city": "Villageton",
      "state": "ST",
      "zipCode": "98765",
      "country": "Countryland",
      "isDefault": true
    }
    // Additional addresses...
  ]
}

*****************************************************************

8. POST : OSA/api/addresses
-- Create a new address for the user.

Exa :
Request Body:
{
  "userID": "456",
  "street": "123 Maple St",
  "city": "Cityville",
  "state": "ST",
  "zipCode": "12345",
  "country": "Countryland",
  "isDefault": false
}

Response Body:
{
  "addressID": "126",
  "userID": "456",
  "street": "123 Maple St",
  "city": "Cityville",
  "state": "ST",
  "zipCode": "12345",
  "country": "Countryland",
  "isDefault": false
}

*****************************************************************

9. PUT : OSA/api/addresses/{addressId}
-- Update details of a specific address.

Exa :
Request Body:
{
  "street": "456 Oak St",
  "city": "Townsville",
  "state": "ST",
  "zipCode": "54321",
  "country": "Countryland",
  "isDefault": false
}

Response Body:
{
  "addressID": "125",
  "userID": "456",
  "street": "456 Oak St",
  "city": "Townsville",
  "state": "ST",
  "zipCode": "54321",
  "country": "Countryland",
  "isDefault": false
}

*****************************************************************

10. DELETE : OSA/api/addresses/{addressId}
-- Delete a specific address.

Exa :
Response Body:
{
  "message": "Address with ID 125 has been successfully deleted."
}

*****************************************************************

11. GET : OSA/api/users/{userId}/addresses
-- Retrieve all addresses for a specific user.

Exa :
Response Body:
{
  "userID": "456",
  "addresses": [
    {
      "addressID": "124",
      "street": "456 Oak St",
      "city": "Townsville",
      "state": "ST",
      "zipCode": "54321",
      "country": "Countryland",
      "isDefault": false
    },
    {
      "addressID": "125",
      "street": "789 Pine St",
      "city": "Villageton",
      "state": "ST",
      "zipCode": "98765",
      "country": "Countryland",
      "isDefault": true
    }
    // Additional addresses...
  ]
}

======================================================================

*************** ADDRESS MS Entity  ***************  

-- >public class AddressDetails :
    private String addressID;
    private String userID;
    private String street;
    private String city;
    private String state;
    private String zipCode;
    private String country;
    private boolean isDefault;

--> public class UserAddresses :
    private String userID;
    private List<Address> addresses;

--> public class DefaultAddress :
    private String userId;
    private Address defaultAddress;

--> public class States :
    private String country;
    private List<String> states;

--> public class CitiesResponse :
    private String country;
    private List<String> cities;

======================================================================

*************** CART MS End Points *************** 

1. GET : OSA/api/carts
-- Retrieve the user's shopping cart.

2. POST : OSA/api/carts
-- Create a new shopping cart for the user.

3. GET : OSA/api/carts/{cartId}
-- Retrieve details of a specific cart.

4. POST : OSA/api/carts/{cartId}/items
-- Add a product to the user's shopping cart.

5. PUT : OSA/api/carts/{cartId}/items/{itemId}
-- Update the quantity of a specific product in the cart.

6. DELETE : OSA/api/carts/{cartId}/items/{itemId}
-- Remove a specific product from the cart.

7. PUT : OSA/api/carts/{cartId}
-- Update the entire shopping cart for the user.

8. DELETE : OSA/api/carts/{cartId}
-- Delete the user's entire shopping cart.

9. POST : OSA/api/carts/{cartId}/checkout
-- Process the checkout for the items in the cart or Initiate the checkout process.

10. GET : OSA/api/users/{userId}/carts/history
-- Retrieve the purchase history for the user.

11. POST /carts/{cartId}/items/{itemId}/move-to-wishlist
-- Move a specific item from the cart to the user's wishlist.

12. GET /users/{userId}/wishlist
-- Retrieve the user's wishlist.

13. POST /users/{userId}/wishlist/{productId}/add-to-cart
-- Add a product from the wishlist to the user's shopping cart.

14. PUT /carts/{cartId}/apply-coupon
-- Apply a coupon or discount to the items in the user's shopping cart.

15. GET /carts/{cartId}/estimated-total
-- Retrieve the estimated total cost of the items in the user's shopping cart, 
including taxes and shipping fees.

*****************************************************************

1. GET : OSA/api/carts
-- Retrieve the user's shopping cart.

Exa :
{
  "userID": "456",
  "cartItems": [
    {
      "productID": "123",
      "productName": "Example Product",
      "quantity": 2,
      "price": 29.99,
      "totalPrice": 59.98
    },
    {
      "productID": "456",
      "productName": "Another Product",
      "quantity": 1,
      "price": 19.99,
      "totalPrice": 19.99
    }
    // Additional cart items...
  ],
  "cartTotal": 79.97
}

*****************************************************************

2. POST : OSA/api/carts
-- Create a new shopping cart for the user.

Exa :
Request Body:
{
  "userID": "456",
  "cartItems": [
    {
      "productID": "123",
      "quantity": 2
    },
    {
      "productID": "456",
      "quantity": 1
    }
    // Additional cart items...
  ]
}

Response Body:
{
  "cartID": "789",
  "userID": "456",
  "cartItems": [
    {
      "productID": "123",
      "productName": "Example Product",
      "quantity": 2,
      "price": 29.99,
      "totalPrice": 59.98
    },
    {
      "productID": "456",
      "productName": "Another Product",
      "quantity": 1,
      "price": 19.99,
      "totalPrice": 19.99
    }
    // Additional cart items...
  ],
  "cartTotal": 79.97
}

*****************************************************************

3. GET : OSA/api/carts/{cartId}
-- Retrieve details of a specific cart.

Exa :
Response Body:
{
  "cartID": "789",
  "userID": "456",
  "cartItems": [
    {
      "productID": "123",
      "productName": "Example Product",
      "quantity": 2,
      "price": 29.99,
      "totalPrice": 59.98
    },
    {
      "productID": "456",
      "productName": "Another Product",
      "quantity": 1,
      "price": 19.99,
      "totalPrice": 19.99
    }
    // Additional cart items...
  ],
  "cartTotal": 79.97
}

*****************************************************************

4. POST : OSA/api/carts/{cartId}/items
-- Add a product to the user's shopping cart.

Exa :
Request Body:
{
  "productID": "123",
  "quantity": 2
}

Response Body:
{
  "cartID": "789",
  "userID": "456",
  "cartItems": [
    {
      "productID": "123",
      "productName": "Example Product",
      "quantity": 2,
      "price": 29.99,
      "totalPrice": 59.98
    },
    // Additional cart items...
  ],
  "cartTotal": 59.98
}

*****************************************************************

5. PUT : OSA/api/carts/{cartId}/items/{itemId}
-- Update the quantity of a specific product in the cart.

Exa :
Request Body:
{
  "quantity": 3
}

Response Body:
{
  "cartID": "789",
  "userID": "456",
  "cartItems": [
    {
      "itemID": "1",
      "productID": "123",
      "productName": "Example Product",
      "quantity": 3,
      "price": 29.99,
      "totalPrice": 89.97
    },
    // Additional cart items...
  ],
  "cartTotal": 89.97
}

*****************************************************************

6. DELETE : OSA/api/carts/{cartId}/items/{itemId}
-- Remove a specific product from the cart.

Exa :
Response Body:
{
  "cartID": "789",
  "userID": "456",
  "cartItems": [
    // Remaining cart items...
  ],
  "cartTotal": 0.0
}

*****************************************************************

7. PUT : OSA/api/carts/{cartId}
-- Update the entire shopping cart for the user.

Exa :
Request Body:
{
  "cartItems": [
    {
      "productID": "123",
      "quantity": 2
    },
    {
      "productID": "456",
      "quantity": 1
    }
    // Additional cart items...
  ]
}

Response Body:
{
  "cartID": "789",
  "userID": "456",
  "cartItems": [
    {
      "productID": "123",
      "productName": "Example Product",
      "quantity": 2,
      "price": 29.99,
      "totalPrice": 59.98
    },
    {
      "productID": "456",
      "productName": "Another Product",
      "quantity": 1,
      "price": 19.99,
      "totalPrice": 19.99
    }
    // Additional cart items...
  ],
  "cartTotal": 79.97
}

*****************************************************************

8. DELETE : OSA/api/carts/{cartId}
-- Delete the user's entire shopping cart.

Exa :
Response Body:
{
  "message": "Shopping cart deleted successfully.",
  "userID": "456"
}

*****************************************************************

9. POST : OSA/api/carts/{cartId}/checkout
-- Process the checkout for the items in the cart or Initiate the checkout process.

Exa :
Request Body:
{
  "paymentMethod": "credit_card",
  "shippingAddressID": "12345"
}

Response Body:
{
  "orderID": "789012",
  "userID": "456",
  "cartID": "123",
  "totalAmount": 79.97,
  "orderDate": "2023-11-18T12:34:56Z",
  "status": "processing"
}

*****************************************************************

10. GET : OSA/api/users/{userId}/carts/history
-- Retrieve the purchase history for the user.

Exa :
Response Body:
[
  {
    "orderID": "789012",
    "cartID": "123",
    "totalAmount": 79.97,
    "orderDate": "2023-11-18T12:34:56Z",
    "status": "completed",
    "items": [
      {
        "productID": "123",
        "productName": "Example Product",
        "quantity": 2,
        "price": 29.99,
        "totalPrice": 59.98
      },
      // Additional items...
    ]
  },
  // Additional orders...
]

*****************************************************************

11. POST /carts/{cartId}/items/{itemId}/move-to-wishlist
-- Move a specific item from the cart to the user's wishlist.

Exa :
Response Body:
{
  "message": "Item moved to wishlist successfully.",
  "wishlistItemID": "987654",
  "productID": "123",
  "productName": "Example Product",
  "price": 29.99
}

*****************************************************************

12. GET /users/{userId}/wishlist
-- Retrieve the user's wishlist.

Exa :
Response Body:
[
  {
    "wishlistItemID": "987654",
    "productID": "123",
    "productName": "Example Product",
    "price": 29.99
  },
  // Additional wishlist items...
]

*****************************************************************

13. POST /users/{userId}/wishlist/{productId}/add-to-cart
-- Add a product from the wishlist to the user's shopping cart.

Exa: 
Response Body:
{
  "message": "Product added to cart successfully.",
  "cartItemID": "456789",
  "productID": "123",
  "productName": "Example Product",
  "quantity": 1,
  "price": 29.99,
  "totalPrice": 29.99
}

*****************************************************************

14. PUT /carts/{cartId}/apply-coupon
-- Apply a coupon or discount to the items in the user's shopping cart.

Exa: 
Request Body:
{
  "couponCode": "SAVE20"
}

Response Body:
{
  "message": "Coupon applied successfully.",
  "discountAmount": 10.00,
  "totalAmountAfterDiscount": 69.97
}

*****************************************************************

15. GET /carts/{cartId}/estimated-total
-- Retrieve the estimated total cost of the items in the user's shopping cart, 
including taxes and shipping fees.

Exa :
Response Body:
{
  "totalBeforeTax": 79.97,
  "taxAmount": 5.00,
  "shippingFee": 4.99,
  "estimatedTotal": 89.96
}

======================================================================

*************** CART MS Entity  ***************  

--> public class UserCartResponse :
    private String userID;
    private List<CartItem> cartItems;
    private double cartTotal;

--> public class NewCartRequest :    
    private String userID;
    private List<CartItem> cartItems;

--> public class CartDetailsResponse :
    private String cartID;
    private String userID;
    private List<CartItem> cartItems;
    private double cartTotal;

--> public class AddCartItemRequest :
    private String productID;
    private int quantity;

--> public class PurchaseHistoryResponse :
    private List<OrderDetails> purchaseHistory;

--> public class OrderDetails :
    private String orderID;
    private String cartID;
    private double totalAmount;
    private String orderDate;
    private String status;
    private List<OrderItemDetails> items;

--> public class OrderItemDetails :
    private String productID;
    private String productName;
    private int quantity;
    private double price;
    private double totalPrice;